name: CI

# yamllint disable-line rule:truthy
on:
  push:
    branches:
      - main
  pull_request: ~

jobs:
  code-style:
    name: Code style
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: Run prettier
        uses: creyD/prettier_action@v4.3
        with:
          prettier_options: --check .

      - name: Run yamllint
        uses: frenck/action-yamllint@v1

  mock-secrets:
    name: Mocking secrets
    runs-on: ubuntu-latest
    needs: code-style
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Make empty secrets file
        run: |
          touch secrets.yaml

      - name: Find all project secrets and add them to the secrets file
        run: |
          grep "\!secret " -r -i --include \*.yaml --include \*.yaml --exclude-dir=.github --exclude-dir=.vscode . | while read -r line ; do
              secret=$(echo ${line} | awk '{if(/secret/) print $4}')
              value="'value0123'"

              if [[ $secret == *_ip ]]
              then
                  value="10.0.0.12"
              elif [[ $secret == *_url ]]
              then
                  value="https://foo.bar"
              elif [[ $secret == dns* ]]
              then
                  value="8.8.8.8"
              elif [[ $secret == gateway ]]
              then
                  value="10.0.0.1"
              elif [[ $secret == subnet ]]
              then
                  value="255.255.255.255"
              elif [[ $secret == *_encryption_key ]]
              then
                  value="rE4PuSP78S3CzXZXjZvFYTvGg4yIi11rwsLngv8fQ7c=" # Random base64 encoded string.
              fi

              if [[ ! $(grep -R "${secret}" secrets.yaml) ]]
              then
                  echo "${secret}: ${value}" >> secrets.yaml
              fi
          done

      - name: Upload mocked secrets
        uses: actions/upload-artifact@v3
        with:
          name: secrets
          path: secrets.yaml

  build:
    name: Building ${{ matrix.configuration }}
    runs-on: ubuntu-latest
    needs: mock-secrets
    strategy:
      fail-fast: false
      matrix:
        configuration:
          - epaper.yaml
          - mechanische_ventilatie.yaml
          - particulate_matter.yaml
          - planthub.yaml
          - watermeter.yaml
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Download mocked secret
        uses: actions/download-artifact@v3
        with:
          name: secrets

      - name: Build ESPHome firmware
        uses: esphome/build-action@v1
        id: esphome-build
        with:
          yaml_file: ${{ matrix.configuration }}

      - name: Prepare firmware for upload
        run: |
          mkdir output
          mv "${{ steps.esphome-build.outputs.name }}" output/

      - name: Upload firmware
        uses: actions/upload-artifact@v3.1.2
        with:
          name: ${{ steps.esphome-build.outputs.name }}
          path: output
