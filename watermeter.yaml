substitutions:
  devicename: watermeter
  upper_devicename: Watermeter
  static_ip: !secret watermeter_static_ip
  wifi_ap_password: !secret ap_password
  api_password: !secret watermeter_api_password
  ota_password: !secret watermeter_ota_password
    
packages:
  device_base: !include device_base.yaml

esphome:
  name: $devicename
  platform: ESP8266
  board: d1_mini

api:
  services:
    service: set_water_usage
    variables:
      meter_value: float
    then:
      - globals.set:
          id: totalWaterUsage
          value: !lambda "return meter_value;"

globals:
  - id: totalWaterUsage
    type: float
    restore_value: no       # When updating below value, change this to no for 1 run.
    initial_value: '245.109' # 31-8-2021 12:00

sensor:
  - platform: pulse_counter
    pin: D4
    id: watermeter_pulse
    name: ${upper_devicename} pulse
    update_interval: 1s
    unit_of_measurement: L
    filters:
      - multiply: 0.016666667
  
  - platform: template
    id: watermeter_total
    name: ${upper_devicename} totaal
    icon: mdi:water
    update_interval: 1s
    unit_of_measurement: mÂ³
    accuracy_decimals: 3
    lambda: |-
      if (id(watermeter_pulse).state >= 1) {
        id(totalWaterUsage) += 0.001;
      }
      return id(totalWaterUsage);
