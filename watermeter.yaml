substitutions:
  devicename: watermeter
  name: Watermeter
  static_ip: !secret watermeter_static_ip
  wifi_ap_password: !secret ap_password
  ota_password: !secret watermeter_ota_password
  encryption_key: !secret watermeter_encryption_key

packages:
  device_base: !include packages/device_base.yaml

esphome:
  name: $devicename
  platform: ESP8266
  board: d1_mini

api:
  services:
    service: set_water_usage
    variables:
      meter_value: float
    then:
      - globals.set:
          id: totalWaterUsage
          value: !lambda "return meter_value;"

globals:
  - id: totalWaterUsage
    type: float
    restore_value: true # When updating below value, change this to false for 1 run.
    initial_value: "264.904" # 23-1-2022 20:30

sensor:
  - platform: pulse_counter
    pin:
      number: D2
      mode:
        input: true
        pullup: true
    id: watermeter_pulse
    name: ${name} pulse
    update_interval: 1s
    unit_of_measurement: L/min
    state_class: measurement
    filters:
      - lambda: |-
          if (x > 0) {
            id(totalWaterUsage) += 0.001;
          }
          return x * (60.0 / 1000.0);
    total:
      id: sensor_pulse_meter_total
      name: ${name} pulse totaal
      icon: mdi:cube-outline
      state_class: total_increasing
      unit_of_measurement: m³
      accuracy_decimals: 3
      filters:
        - multiply: 0.001

  - platform: template
    id: watermeter_total
    name: ${name} totaal
    icon: mdi:water
    update_interval: 1s
    unit_of_measurement: m³
    state_class: total_increasing
    accuracy_decimals: 3
    lambda: |-
      return id(totalWaterUsage);
